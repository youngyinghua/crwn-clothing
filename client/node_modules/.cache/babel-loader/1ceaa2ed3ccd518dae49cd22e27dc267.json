{"ast":null,"code":"var _jsxFileName = \"/Users/wawa/Desktop/crwn-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signUpStart } from \"../../redux/user/user.action\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\nimport \"./sign-up.styles.scss\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const {\n    signUpInfo,\n    setSignUpInfo\n  } = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirm_password: \"\"\n  });\n  console.log(signUpInfo);\n  const {\n    email,\n    password,\n    confirm_password,\n    displayName\n  } = signUpInfo;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== confirm_password) {\n      alert(\"passwords do not match\");\n      return;\n    }\n\n    signUpStart({\n      email,\n      password,\n      displayName\n    });\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSignUpInfo({ ...signUpInfo,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"I do not have a account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"displayName\",\n    type: \"text\",\n    handleChange: handleChange,\n    value: displayName,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    handleChange: handleChange,\n    value: email,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    handleChange: handleChange,\n    value: password,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"confirm_password\",\n    type: \"password\",\n    handleChange: handleChange,\n    value: confirm_password,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatch = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatch)(SignUp);","map":{"version":3,"sources":["/Users/wawa/Desktop/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","signUpStart","CustomButton","FormInput","SignUp","signUpInfo","setSignUpInfo","displayName","email","password","confirm_password","console","log","handleSubmit","e","preventDefault","alert","handleChange","name","value","target","mapDispatch","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signUpStart } from \"../../redux/user/user.action\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport FormInput from \"../form-input/form-input.component\";\n\nimport \"./sign-up.styles.scss\";\n\nconst SignUp = ({ signUpStart }) => {\n  const { signUpInfo, setSignUpInfo } = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirm_password: \"\",\n  });\n  console.log(signUpInfo);\n\n  const { email, password, confirm_password, displayName } = signUpInfo;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== confirm_password) {\n      alert(\"passwords do not match\");\n      return;\n    }\n    signUpStart({ email, password, displayName });\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setSignUpInfo({ ...signUpInfo, [name]: value });\n  };\n\n  return (\n    <div className=\"sign-up\">\n      <h2>I do not have a account</h2>\n      <span>Sign up with your email and password</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name=\"displayName\"\n          type=\"text\"\n          handleChange={handleChange}\n          value={displayName}\n          label=\"Display Name\"\n          required\n        />\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          handleChange={handleChange}\n          value={email}\n          label=\"Email\"\n          required\n        />\n        <FormInput\n          name=\"password\"\n          type=\"password\"\n          handleChange={handleChange}\n          value={password}\n          label=\"Password\"\n          required\n        />\n        <FormInput\n          name=\"confirm_password\"\n          type=\"password\"\n          handleChange={handleChange}\n          value={confirm_password}\n          label=\"Confirm Password\"\n          required\n        />\n        <CustomButton type=\"submit\">SIGN UP</CustomButton>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatch = (dispatch) => ({\n  signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials)),\n});\n\nexport default connect(null, mapDispatch)(SignUp);\n"]},"metadata":{},"sourceType":"module"}
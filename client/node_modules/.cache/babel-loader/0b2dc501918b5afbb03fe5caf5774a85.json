{"ast":null,"code":"import { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport { firestore, getCollectionData } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from \"./shop.actions\";\nimport ShopActionTypes from \"./shop.types\";\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collections = yield call(getCollectionData, snapshot);\n    yield put(fetchCollectionsSuccess(collections));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* onFetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(onFetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/Users/wawa/Desktop/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","firestore","getCollectionData","fetchCollectionsFailure","fetchCollectionsSuccess","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collections","error","message","onFetchCollectionsStart","FETCH_COLLECTION_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SAASC,SAAT,EAAoBC,iBAApB,QAA6C,+BAA7C;AACA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAIA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,MAAI;AACF,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,WAAW,GAAG,MAAMb,IAAI,CAACI,iBAAD,EAAoBO,QAApB,CAA9B;AACA,UAAMV,GAAG,CAACK,uBAAuB,CAACO,WAAD,CAAxB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMb,GAAG,CAACI,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,uBAAV,GAAoC;AACzC,QAAMjB,UAAU,CACdQ,eAAe,CAACU,sBADF,EAEdT,qBAFc,CAAhB;AAID;AAED,OAAO,UAAUU,SAAV,GAAsB;AAC3B,QAAMhB,GAAG,CAAC,CAACF,IAAI,CAACgB,uBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport { firestore, getCollectionData } from \"../../firebase/firebase.utils\";\nimport {\n  fetchCollectionsFailure,\n  fetchCollectionsSuccess,\n} from \"./shop.actions\";\nimport ShopActionTypes from \"./shop.types\";\n\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collections = yield call(getCollectionData, snapshot);\n    yield put(fetchCollectionsSuccess(collections));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nexport function* onFetchCollectionsStart() {\n  yield takeLatest(\n    ShopActionTypes.FETCH_COLLECTION_START,\n    fetchCollectionsAsync\n  );\n}\n\nexport function* shopSagas() {\n  yield all([call(onFetchCollectionsStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { takeLatest, takeEvery, call, put } from \"redux-saga/effects\";\nimport { firestore, getCollectionData } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from \"./shop.actions\";\nimport ShopActionTypes from \"./shop.types\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"i am fetching\"); // try {\n  //   const collectionRef = firestore.collection(\"collections\");\n  //   const snapshot = yield collectionRef.get();\n  //   const collections = yield call(getCollectionData, snapshot);\n  //   yield put(fetchCollectionsSuccess(collections));\n  // } catch (error) {\n  //   yield put(fetchCollectionsFailure(error));\n  // }\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/wawa/Desktop/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeLatest","takeEvery","call","put","firestore","getCollectionData","fetchCollectionsFailure","fetchCollectionsSuccess","ShopActionTypes","fetchCollectionsAsync","console","log","fetchCollectionsStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,IAAhC,EAAsCC,GAAtC,QAAiD,oBAAjD;AACA,SAASC,SAAT,EAAoBC,iBAApB,QAA6C,+BAA7C;AACA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAIA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,eAAZ,CAAN,CADuC,CAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMX,SAAS,CACbO,eAAe,CAACK,sBADH,EAEbJ,qBAFa,CAAf;AAID","sourcesContent":["import { takeLatest, takeEvery, call, put } from \"redux-saga/effects\";\nimport { firestore, getCollectionData } from \"../../firebase/firebase.utils\";\nimport {\n  fetchCollectionsFailure,\n  fetchCollectionsSuccess,\n} from \"./shop.actions\";\nimport ShopActionTypes from \"./shop.types\";\n\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"i am fetching\");\n  // try {\n  //   const collectionRef = firestore.collection(\"collections\");\n  //   const snapshot = yield collectionRef.get();\n  //   const collections = yield call(getCollectionData, snapshot);\n  //   yield put(fetchCollectionsSuccess(collections));\n  // } catch (error) {\n  //   yield put(fetchCollectionsFailure(error));\n  // }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTION_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/wawa/Desktop/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { getCollections } from \"../../redux/shop/shop.actions\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { firestore, getCollectionData } from \"../../firebase/firebase.utils\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot(async snapshot => {\n      const collections = getCollectionData(snapshot);\n      this.props.getCollections(collections);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match,\n      otherProps\n    } = this.props;\n    const {\n      isLoading\n    } = this.state.loading;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isLoading\n      }, otherProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isLoading\n      }, otherProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatch = dispatch => ({\n  getCollections: collections => dispatch(getCollections(collections))\n});\n\nexport default connect(null, mapDispatch)(ShopPage);","map":{"version":3,"sources":["/Users/wawa/Desktop/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","connect","Route","CollectionsOverview","getCollections","CollectionPage","firestore","getCollectionData","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collections","props","setState","render","match","otherProps","isLoading","path","mapDispatch","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,SAAT,EAAoBC,iBAApB,QAA6C,+BAA7C;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACL,mBAAD,CAAlD;AACA,MAAMO,yBAAyB,GAAGF,WAAW,CAACH,cAAD,CAA7C;;AAEA,MAAMM,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD6B;AAAA,SAKrCC,uBALqC,GAKX,IALW;AAAA;;AAOrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAOC,QAAP,IAAoB;AAC3C,YAAMC,WAAW,GAAGd,iBAAiB,CAACa,QAAD,CAArC;AACA,WAAKE,KAAL,CAAWlB,cAAX,CAA0BiB,WAA1B;AACA,WAAKE,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJD;AAKD;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAwB,KAAKJ,KAAnC;AACA,UAAM;AAAEK,MAAAA;AAAF,QAAgB,KAAKd,KAAL,CAAWC,OAAjC;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEW,KAAK,CAACG,IAAK,EAFtB;AAGE,MAAA,MAAM,EAAGN,KAAD,iBACN,oBAAC,8BAAD;AACE,QAAA,SAAS,EAAEK;AADb,SAEMD,UAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAWE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAED,KAAK,CAACG,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAGN,KAAD,iBACN,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEK;AAAtC,SAAqDD,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAoBD;;AAvCoC;;AA0CvC,MAAMG,WAAW,GAAIC,QAAD,KAAe;AACjC1B,EAAAA,cAAc,EAAGiB,WAAD,IAAiBS,QAAQ,CAAC1B,cAAc,CAACiB,WAAD,CAAf;AADR,CAAf,CAApB;;AAIA,eAAepB,OAAO,CAAC,IAAD,EAAO4B,WAAP,CAAP,CAA2BlB,QAA3B,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { getCollections } from \"../../redux/shop/shop.actions\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { firestore, getCollectionData } from \"../../firebase/firebase.utils\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  state = {\n    loading: true,\n  };\n\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.onSnapshot(async (snapshot) => {\n      const collections = getCollectionData(snapshot);\n      this.props.getCollections(collections);\n      this.setState({ loading: false });\n    });\n  }\n\n  render() {\n    const { match, otherProps } = this.props;\n    const { isLoading } = this.state.loading;\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          render={(props) => (\n            <CollectionsOverviewWithSpinner\n              isLoading={isLoading}\n              {...otherProps}\n            />\n          )}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={(props) => (\n            <CollectionPageWithSpinner isLoading={isLoading} {...otherProps} />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatch = (dispatch) => ({\n  getCollections: (collections) => dispatch(getCollections(collections)),\n});\n\nexport default connect(null, mapDispatch)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyCxuS31xQor5wUbO2G5oB7Nagqc9Rd0o2g\",\n  authDomain: \"crwn-db-928b7.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-928b7.firebaseio.com\",\n  projectId: \"crwn-db-928b7\",\n  storageBucket: \"crwn-db-928b7.appspot.com\",\n  messagingSenderId: \"252835979138\",\n  appId: \"1:252835979138:web:32745818a3e9fc8986b99b\",\n  measurementId: \"G-BVEVS6QFT2\"\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.collection(`/users`);\n  console.log(userRef.get());\n  const snapShot = await userRef.get(); // if (!snapShot.exists) {\n  //   const { displayName, email } = userAuth;\n  //   const createAt = new Date();\n  //   try {\n  //     await userRef.set({\n  //       displayName,\n  //       email,\n  //       createAt,\n  //       ...additionalData,\n  //     });\n  //   } catch (error) {\n  //     console.log(\"error creating user\", error.message);\n  //   }\n  // }\n\n  return userRef;\n};\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/wawa/Desktop/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","createUserProfileDocument","userAuth","additionalData","userRef","collection","console","log","get","snapShot","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,+BAFC;AAGbC,EAAAA,WAAW,EAAE,sCAHA;AAIbC,EAAAA,SAAS,EAAE,eAJE;AAKbC,EAAAA,aAAa,EAAE,2BALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf;AAWAT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB;AACA,OAAO,MAAMU,IAAI,GAAGX,QAAQ,CAACW,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGZ,QAAQ,CAACY,SAAT,EAAlB;AAEP,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAGJ,SAAS,CAACK,UAAV,CAAsB,QAAtB,CAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACI,GAAR,EAAZ;AACA,QAAMC,QAAQ,GAAG,MAAML,OAAO,CAACI,GAAR,EAAvB,CAJ2E,CAK3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAOJ,OAAP;AACD,CApBM;AAsBP,MAAMM,QAAQ,GAAG,IAAItB,QAAQ,CAACW,IAAT,CAAcY,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAMf,IAAI,CAACgB,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAetB,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyCxuS31xQor5wUbO2G5oB7Nagqc9Rd0o2g\",\n  authDomain: \"crwn-db-928b7.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-928b7.firebaseio.com\",\n  projectId: \"crwn-db-928b7\",\n  storageBucket: \"crwn-db-928b7.appspot.com\",\n  messagingSenderId: \"252835979138\",\n  appId: \"1:252835979138:web:32745818a3e9fc8986b99b\",\n  measurementId: \"G-BVEVS6QFT2\",\n};\n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.collection(`/users`);\n  console.log(userRef.get());\n  const snapShot = await userRef.get();\n  // if (!snapShot.exists) {\n  //   const { displayName, email } = userAuth;\n  //   const createAt = new Date();\n  //   try {\n  //     await userRef.set({\n  //       displayName,\n  //       email,\n  //       createAt,\n  //       ...additionalData,\n  //     });\n  //   } catch (error) {\n  //     console.log(\"error creating user\", error.message);\n  //   }\n  // }\n  return userRef;\n};\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}
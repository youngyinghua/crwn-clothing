{"ast":null,"code":"var _jsxFileName = \"/Users/wawa/Desktop/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport CollectionPage from \"../collection/collection.component\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { selectIsCollectionsFetching, selectIsCollectionsLoaded } from \"../../redux/shop/shop.selectors\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    this.props.fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isCollectionLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapState = state => ({\n  isCollectionFetching: selectIsCollectionsFetching(state),\n  isCollectionLoaded: selectIsCollectionsLoaded(state)\n});\n\nconst mapDispatch = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapState, mapDispatch)(ShopPage);","map":{"version":3,"sources":["/Users/wawa/Desktop/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","connect","Route","CollectionsOverview","fetchCollectionsStartAsync","CollectionPage","WithSpinner","selectIsCollectionsFetching","selectIsCollectionsLoaded","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","path","isCollectionLoaded","mapState","state","mapDispatch","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SACEC,2BADF,EAEEC,yBAFF,QAGO,iCAHP;AAKA,MAAMC,8BAA8B,GAAGH,WAAW,CAACH,mBAAD,CAAlD;AACA,MAAMO,yBAAyB,GAAGJ,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMM,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWV,0BAAX;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkC,KAAKH,KAA7C;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAFtB;AAGE,MAAA,MAAM,EAAGJ,KAAD,iBACN,oBAAC,8BAAD;AACE,QAAA,SAAS,EAAEG;AADb,SAEMH,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAWE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAGJ,KAAD,iBACN,oBAAC,yBAAD;AACE,QAAA,SAAS,EAAEK;AADb,SAEML,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAuBD;;AA9BoC;;AAiCvC,MAAMM,QAAQ,GAAIC,KAAD,KAAY;AAC3BJ,EAAAA,oBAAoB,EAAEV,2BAA2B,CAACc,KAAD,CADtB;AAE3BF,EAAAA,kBAAkB,EAAEX,yBAAyB,CAACa,KAAD;AAFlB,CAAZ,CAAjB;;AAKA,MAAMC,WAAW,GAAIC,QAAD,KAAe;AACjCnB,EAAAA,0BAA0B,EAAE,MAAMmB,QAAQ,CAACnB,0BAA0B,EAA3B;AADT,CAAf,CAApB;;AAIA,eAAeH,OAAO,CAACmB,QAAD,EAAWE,WAAX,CAAP,CAA+BX,QAA/B,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport CollectionPage from \"../collection/collection.component\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport {\n  selectIsCollectionsFetching,\n  selectIsCollectionsLoaded,\n} from \"../../redux/shop/shop.selectors\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    this.props.fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const { match, isCollectionFetching } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          render={(props) => (\n            <CollectionsOverviewWithSpinner\n              isLoading={isCollectionFetching}\n              {...props}\n            />\n          )}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={(props) => (\n            <CollectionPageWithSpinner\n              isLoading={isCollectionLoaded}\n              {...props}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => ({\n  isCollectionFetching: selectIsCollectionsFetching(state),\n  isCollectionLoaded: selectIsCollectionsLoaded(state),\n});\n\nconst mapDispatch = (dispatch) => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\n});\n\nexport default connect(mapState, mapDispatch)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}
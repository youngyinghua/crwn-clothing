{"ast":null,"code":"import ShopActionType from \"./shop.types\";\nimport { firestore, getCollectionData } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionType.FETCH_COLLECTION_START\n});\nexport const fetchCollectionsSuccess = collections => ({\n  type: ShopActionType.FETCH_COLLECTION_SUCCESS,\n  payload: collections\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionType.FETCH_COLLECTION_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = dispatch => {\n  const collectionRef = firestore.collection(\"collections\");\n  dispatch(fetchCollectionsStart());\n  collectionRef.get().then(snapshot => {\n    const collections = getCollectionData(snapshot); // getCollections(collections);\n\n    this.setState({\n      loading: false\n    });\n    dispatch(fetchCollectionsSuccess());\n  }).catch(error => {\n    dispatch(fetchCollectionsFailure(error));\n  });\n};","map":{"version":3,"sources":["/Users/wawa/Desktop/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionType","firestore","getCollectionData","fetchCollectionsStart","type","FETCH_COLLECTION_START","fetchCollectionsSuccess","collections","FETCH_COLLECTION_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTION_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","setState","loading","catch","error"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,cAA3B;AACA,SAASC,SAAT,EAAoBC,iBAApB,QAA6C,+BAA7C;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,cAAc,CAACK;AADqB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,WAAD,KAAkB;AACvDH,EAAAA,IAAI,EAAEJ,cAAc,CAACQ,wBADkC;AAEvDC,EAAAA,OAAO,EAAEF;AAF8C,CAAlB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAmB;AACxDP,EAAAA,IAAI,EAAEJ,cAAc,CAACY,wBADmC;AAExDH,EAAAA,OAAO,EAAEE;AAF+C,CAAnB,CAAhC;AAKP,OAAO,MAAME,0BAA0B,GAAIC,QAAD,IAAc;AACtD,QAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,EAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AACAY,EAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,UAAMZ,WAAW,GAAGL,iBAAiB,CAACiB,QAAD,CAArC,CADkB,CAElB;;AACA,SAAKC,QAAL,CAAc;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAd;AACAP,IAAAA,QAAQ,CAACR,uBAAuB,EAAxB,CAAR;AACD,GAPH,EAQGgB,KARH,CAQUC,KAAD,IAAW;AAChBT,IAAAA,QAAQ,CAACJ,uBAAuB,CAACa,KAAD,CAAxB,CAAR;AACD,GAVH;AAWD,CAdM","sourcesContent":["import ShopActionType from \"./shop.types\";\nimport { firestore, getCollectionData } from \"../../firebase/firebase.utils\";\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionType.FETCH_COLLECTION_START,\n});\n\nexport const fetchCollectionsSuccess = (collections) => ({\n  type: ShopActionType.FETCH_COLLECTION_SUCCESS,\n  payload: collections,\n});\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n  type: ShopActionType.FETCH_COLLECTION_FAILURE,\n  payload: errorMessage,\n});\n\nexport const fetchCollectionsStartAsync = (dispatch) => {\n  const collectionRef = firestore.collection(\"collections\");\n  dispatch(fetchCollectionsStart());\n  collectionRef\n    .get()\n    .then((snapshot) => {\n      const collections = getCollectionData(snapshot);\n      // getCollections(collections);\n      this.setState({ loading: false });\n      dispatch(fetchCollectionsSuccess());\n    })\n    .catch((error) => {\n      dispatch(fetchCollectionsFailure(error));\n    });\n};\n"]},"metadata":{},"sourceType":"module"}
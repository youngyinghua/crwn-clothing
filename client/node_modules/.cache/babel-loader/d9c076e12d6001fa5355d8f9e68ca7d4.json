{"ast":null,"code":"import { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { signInFailure, signInSuccess } from \"./user.action\";\nimport UserActionTypes from \"./user.types\";\nexport function* getUser(user) {\n  const userRef = yield call(createUserProfileDocument, user);\n  const userSnapshot = yield userRef.get();\n  yield put(signInSuccess({\n    id: userSnapshot.id,\n    ...userSnapshot.data()\n  }));\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    getUser(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    getUser(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/wawa/Desktop/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","call","put","all","auth","googleProvider","createUserProfileDocument","signInFailure","signInSuccess","UserActionTypes","getUser","user","userRef","userSnapshot","get","id","data","signInWithGoogle","signInWithPopup","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAKA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,eAA7C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,OAAV,CAAkBC,IAAlB,EAAwB;AAC7B,QAAMC,OAAO,GAAG,MAAMX,IAAI,CAACK,yBAAD,EAA4BK,IAA5B,CAA1B;AACA,QAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,QAAMZ,GAAG,CACPM,aAAa,CAAC;AACZO,IAAAA,EAAE,EAAEF,YAAY,CAACE,EADL;AAEZ,OAAGF,YAAY,CAACG,IAAb;AAFS,GAAD,CADN,CAAT;AAMD;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEN,MAAAA;AAAF,QAAW,MAAMP,IAAI,CAACc,eAAL,CAAqBb,cAArB,CAAvB;AACAK,IAAAA,OAAO,CAACC,IAAD,CAAP;AACD,GAHD,CAGE,OAAOQ,KAAP,EAAc;AACd,UAAMjB,GAAG,CAACK,aAAa,CAACY,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMpB,UAAU,CAACS,eAAe,CAACY,oBAAjB,EAAuCJ,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUK,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AACF,UAAM;AAAEd,MAAAA;AAAF,QAAW,MAAMP,IAAI,CAACsB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACAf,IAAAA,OAAO,CAACC,IAAD,CAAP;AACD,GAHD,CAGE,OAAOQ,KAAP,EAAc;AACd,UAAMjB,GAAG,CAACK,aAAa,CAACY,KAAD,CAAd,CAAT;AACD;AACF;AACD,OAAO,UAAUQ,kBAAV,GAA+B;AACpC,QAAM3B,UAAU,CAACS,eAAe,CAACmB,mBAAjB,EAAsCN,eAAtC,CAAhB;AACD;AAED,OAAO,UAAUO,SAAV,GAAsB;AAC3B,QAAM1B,GAAG,CAAC,CAACF,IAAI,CAACmB,mBAAD,CAAL,EAA4BnB,IAAI,CAAC0B,kBAAD,CAAhC,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n} from \"../../firebase/firebase.utils\";\nimport { signInFailure, signInSuccess } from \"./user.action\";\nimport UserActionTypes from \"./user.types\";\n\nexport function* getUser(user) {\n  const userRef = yield call(createUserProfileDocument, user);\n  const userSnapshot = yield userRef.get();\n  yield put(\n    signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data(),\n    })\n  );\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    getUser(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    getUser(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}